# For more information on configuration, see:
#   * Official English Documentation: http://nginx.org/en/docs/
#   * Official Russian Documentation: http://nginx.org/ru/docs/
user nginx;
worker_processes 2;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;
worker_rlimit_nofile 49152;
# This should be worker_processes * worker_connections * 2 since 2 files are used per connection when passing to an upstream.
# Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;
events {
    worker_connections 16384;
    use epoll;
}
http {
    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }
    server {
        listen 80;
        server_name evaluator.metguc.in;
        return 301 https://$host$request_uri;
    }

    log_format main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    access_log /var/log/nginx/access.log  main;
    include /etc/nginx/mime.types; # default mime types
    include /etc/nginx/conf.d/*.conf; # modular configuration files
    default_type application/octet-stream;
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 4096;
    client_max_body_size 10m;
    client_body_buffer_size 128k;
    reset_timedout_connection on;
    gzip on;
    gzip_min_length 1024;
    gzip_comp_level 9;
    gzip_proxied any;
    gzip_types text/html text/css application/x-javascript text/xml application/json application/xml application/xml+rss text/javascript;
    gzip_vary on;
    upstream api {
        least_conn;
        # consider ssh port forwading to server instances
        server 127.0.0.1:3000;
        server 127.0.0.1:3001;
    }
    server {
        listen 443 ssl;
        server_name evaluator.metguc.in;
        ssl_certificate /etc/letsencrypt/live/metguc.in/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/metguc.in/privkey.pem;
        ssl_protocols TLSv1.1 TLSv1.2;
        ssl_session_cache shared:SSL:20m;
        ssl_session_timeout 1h;
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:ECDHE-RSA-AES128-GCM-SHA256:AES256+EECDH:DHE-RSA-AES128-GCM-SHA256:AES256+EDH:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES256-GCM-SHA384:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256:AES256-SHA:AES128-SHA:DES-CBC3-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!MD5:!PSK:!RC4";
        ssl_prefer_server_ciphers on;
        location /api/ {
            proxy_pass http://api;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location /faye {
            proxy_pass http://api/faye;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_http_version 1.1;
            proxy_redirect off;
        }
        location / {
            root /var/www/evaluator.guclink.in;
            index index.html;
            gzip_static on;
            aio on;
            directio 8m;
        }
    }
    
}
